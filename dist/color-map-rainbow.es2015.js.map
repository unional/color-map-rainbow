{"version":3,"file":"color-map-rainbow.es2015.js","sources":["../node_modules/color-map/src/createColors.ts","../node_modules/color-map/src/createColorsFromMap.ts","../node_modules/color-map/src/rgbHex.ts","../src/createRainbow.ts"],"sourcesContent":["import { RGB, RGBA, Alpha } from './interfaces'\n\nexport function createColors(from: RGB, to: RGB, shades: number, alpha: Alpha = [1, 1]): RGBA[] {\n  const rgba: any[] = []\n  const start = [...from]\n  const diff = [\n    to[0] - from[0],\n    to[1] - from[1],\n    to[2] - from[2]\n  ]\n\n  start.push(alpha[0])\n  diff.push(alpha[1] - alpha[0])\n\n  const inc = 1 /\n    Math.max(shades - 1, 1)\n\n  for (let i = 0; i < shades; i++) {\n    const color = [\n      Math.round(start[0] + i * diff[0] * inc),\n      Math.round(start[1] + i * diff[1] * inc),\n      Math.round(start[2] + i * diff[2] * inc),\n      start[3] + i * diff[3] * inc\n    ]\n    rgba.push(color)\n  }\n  return rgba\n}\n","import { ColorMap, Alpha, RGBA, RGB } from './interfaces'\nimport { createColors } from './createColors'\n\n/**\n * Create colors with specified color map.\n */\nexport function createColorsFromMap(colormap: ColorMap, shades: number, alpha?: Alpha): RGBA[] {\n  if (shades < colormap.length) {\n    throw new Error(`Requires at least ${colormap.length} shades.`)\n  }\n\n  const result: RGBA[] = []\n  const steps: number[] = []\n  for (let i = 0; i < colormap.length; i++) {\n    steps.push(Math.round(colormap[i].index * shades))\n  }\n\n  for (let i = 0; i < colormap.length - 1; i++) {\n    const n = steps[i + 1] - steps[i]\n    const from: RGB = colormap[i].rgb;\n    const to = colormap[i + 1].rgb;\n    result.push(...createColors(from, to, n, alpha))\n  }\n\n  return result\n}\n","import { RGB } from './interfaces'\n\n/**\n * Convert `RGB` to `#rgb`\n * JavaScript note: no check for array length, use it properly.\n */\nexport function rgbHex(rgb: RGB) {\n  let hex = '#'\n  for (let i = 0; i < 3; i++) {\n    hex += d2h(rgb[i])\n  }\n  return hex\n}\n\nfunction d2h(d: number) {\n  let s = (+d).toString(16)\n  return s.length < 2 ? '0' + s : s\n}\n","import { createColorsFromMap, ColorMap, Alpha } from 'color-map'\n\nexport const rainbow: ColorMap = [\n  { index: 0, rgb: [150, 0, 90] },\n  { index: 0.125, rgb: [0, 0, 200] },\n  { index: 0.25, rgb: [0, 25, 255] },\n  { index: 0.375, rgb: [0, 152, 255] },\n  { index: 0.5, rgb: [44, 255, 150] },\n  { index: 0.625, rgb: [151, 255, 0] },\n  { index: 0.75, rgb: [255, 234, 0] },\n  { index: 0.875, rgb: [255, 111, 0] },\n  { index: 1, rgb: [255, 0, 0] }\n]\n\n/**\n * Create rainbow of colors\n * @returns array of [r,g,b,a]\n */\nexport function createRainbow(shades: number, alpha?: Alpha) {\n  return createColorsFromMap(rainbow, shades, alpha)\n}\n"],"names":[],"mappings":"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"}